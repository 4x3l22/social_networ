
services:
  database:
    image: postgres:17
    restart: always
    container_name: user-service-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: social_network
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network

  user-service:
    build: 
      context: "./user-service"
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      - database
    ports:
      - "8083:8083"
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: social_network
      DB_USER: postgres
      DB_PASSWORD: 123456
      JWT_SECRET: SANDALO
      JWT_EXPIRES_IN: 1h
    networks:
      - backend-network

  publication-service:
    build: 
      context: "./publication-service"
      dockerfile: Dockerfile
    container_name: publication-service
    depends_on:
      - database
      - user-service
    ports:
      - "8084:8084"
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: social_network
      DB_USER: postgres
      DB_PASSWORD: 123456
      JWT_SECRET: SANDALO
      JWT_EXPIRES_IN: 1h
    networks:
      - backend-network

  frontend-service:
    build: 
      context: "./UI"
      dockerfile: Dockerfile
    container_name: frontend-service
    ports:
      - "4200:80"
    depends_on:
      - user-service
      - publication-service
    environment:
      API_URL: http://localhost:8083
    networks:
      - backend-network
      
volumes:
  postgres-data:

networks:
  backend-network:
